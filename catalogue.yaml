- name: installing catalogue component
  hosts: catalogue
  become: yes
  tasks:
  - name: Setup NodeJS repos
    ansible.builtin.shell: https://rpm.nodesource.com/setup_lts.x | bash

  - name: install Nodejs
    ansible.builtin.yum:
      name: nodejs
      state: installed

  - name: check user is existed or not
    ansible.builtin.command: id roboshop
    register: output
    ignore_errors: true

  - when: output.rc != 0
    name: create roboshop user
    ansible.builtin.user:
      name: roboshop

  - name: check the app directory exists or not
    ansible.builtin.stat:
      path: /app
    register: directory

  - when: directory.stat.exists == False
    name: create /app directory
    ansible.builtin.file:
      path: /app
      state: directory

  - name: download catalogue application
    ansible.builtin.get_url:
      url: https://roboshop-artifacts.s3.amazonaws.com/catalogue.zip
      dest: /tmp

  - name: extract the catalogue content
    ansible.builtin.unarchive:
      src: /tmp/catalogue.zip
      dest: /app
      remote_src: yes

  - name: install dependencies
    ansible.builtin.command: npm install
    args:
      chdir: /app

  - name: copy catalogue service file
    ansible.builtin.copy:
      src: catalogue.service
      dest: /etc/systemd/system/catalogue.service

  - name: system daemon-reload
    ansible.builtin.systemd:
      daemon_reload: true

  - name: copy mongo repo file
    ansible.builtin.copy:
      src: mongo.repo
      dest: /etc/yum.repos.d/mongo.repo

  - name: install mongodb
    ansible.builtin.yum:
      name: mongodb-org-shell
      state: installed

  - name: Load schema
    ansible.builtin.command: mongo --host mongodb-dev.jdevops72.online < /app/schema/catalogue.js

  - name: restart catalogue
    ansible.builtin.service:
      name: catalogue
      state: restarted
      enabled: true